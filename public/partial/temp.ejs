<!DOCTYPE html>
<html>
<head>
<title><%= title %></title>
<link rel='stylesheet' href='/stylesheets/style.css' />

<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.2.26/angular.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>

<!--<script src="http://maps.google.com/maps/api/js"></script>  -->

<script src="http://maps.google.com/maps/api/js?libraries=placeses,visualization,drawing,geometry,places"></script>

<script src="http://rawgit.com/allenhwkim/angularjs-google-maps/master/build/scripts/ng-map.min.js"></script>

<!-- start circle -->
<script src="http://code.angularjs.org/1.3.15/angular.js"></script>
<script src="http://rawgit.com/allenhwkim/angularjs-google-maps/master/build/scripts/ng-map.js"></script>
<!-- end circle -->



<!-- https://github.com/allenhwkim/angularjs-google-maps -->
<link href="/stylesheets/custom-marker.css"  rel="stylesheet" />
</head>
<body ng-app="myApp">
	<h1><%= title %></h1>
	<p>Welcome to <%= title %></p>
	<div ng-controller="MarkerRemoveCtrl">
	
	
	Enter an address1: <br/>
  <input places-auto-complete size=80 ng-model="address" component-restrictions="{country:'us'}" on-place-changed="placeChanged()" /> <br/>
  <div ng-show="place">
    Address = {{place.formatted_address}} <br/>
    Location: {{pos}}<br/>
  </div>
  address : {{address}}
 position {{pos}}
  
  <br/>Enter an address2: <br/>
  <input places-auto-complete size=80 ng-model="daddress" component-restrictions="{country:'us'}" on-place-changed="dplaceChanged()" /> <br/>
   <div ng-show="dplace">
    Address = {{dplace.formatted_address}} <br/>
    Location: {{dplace.geometry.location.lat()}}<br/>
  </div>
		<map center="{{pos}}" zoom="14" on-click="addMarker()">
			
			<marker position="{{pos}}" on-click="showInfoWindow()" id="startMarker"></marker>
			
			<shape name="circle" no-watcher="true"
		      stroke-color="#FF0000"
		      stroke-opacity="0.8"
		      stroke-weight="2"
		      fill-color="#FF0000"
		      fill-opacity="0.35"
		      center={{pos}}
		      radius="100">
		    </shape>
			
			<directions
	          draggable="true"
	          panel="directions-panel"
	          travel-mode="DRIVING"
	          origin="{{pos}}"
	          destination="{{dpos}}">
	        </directions>
	        
	        <!--  <custom-marker id="start" position="{{pos}}">
	          <div> You are Here </div>
	        </custom-marker>
	        
	        <custom-marker id="end" position="{{dpos}}">
	          <div> Ends Location </div>
	        </custom-marker> -->
	        
		</map>
	</div>
	
	Directions path length:
        {{map.directionsRenderers[0].directions.routes[0].overview_path.length}}
</body>

<script>
      angular.module('ngMap').run(function($rootScope, NgMap) {
        NgMap.getMap().then(function(map) {
          $rootScope.map = map;
        });
      });
    </script>

<script>
	var myApp = angular.module('myApp', [ 'ngMap' ]);

	myApp.controller('MarkerRemoveCtrl', function($scope, $compile) {
		$scope.pos = "current-location";
		$scope.dpos = "";
		$scope.circle = "current-location";
		var vm = this;
		$scope.posarr = [];
		$scope.positions = [ {
			lat : 37.33034475143813,
			lng : -121.9207763671875
		}, {
			lat : 37.7699298,
			lng : -122.4463157
		}, {
			lat : 37.7629298,
			lng : -122.4469157
		}, {
			lat : 37.7699294,
			lng : -122.4463157
		} ];
		$scope.addMarker = function(event) {
			var ll = event.latLng;
			$scope.positions.push({
				lat : ll.lat(),
				lng : ll.lng()
			});
		}
		$scope.deleteMarkers = function() {
			$scope.positions = [];
		};
		$scope.showMarkers = function() {
			for ( var key in $scope.map.markers) {
				$scope.map.markers[key].setMap($scope.map);
			}
			;
		};
		$scope.hideMarkers = function() {
			for ( var key in $scope.map.markers) {
				$scope.map.markers[key].setMap(null);
			}
			;
		};

		$scope.showInfoWindow = function(position) {
			alert("You have clicked on Position[" + position.latLng.lat()
					+ ", " + position.latLng.lng() + "]"+position.formatted_address);
			var geocoder = new google.maps.Geocoder;
			geocoder.geocode({'location': position.latLng}, function(results, status) {
			    if (status === google.maps.GeocoderStatus.OK) {
			      if (results[1]) {
			       // map.setZoom(11);
			       /* var marker = new google.maps.Marker({
			          position: latlng,
			          map: map
			        });*/
			        //infowindow.setContent(results[1].formatted_address);
			        //infowindow.open(map, marker);
			        console.log(results[1].formatted_address);
			      } else {
			        window.alert('No results found');
			      }
			    } else {
			      window.alert('Geocoder failed due to: ' + status);
			    }
			  });
		};
		
		
		   $scope.placeChanged = function() {
		     $scope.place = this.getPlace();
		     console.log(
		       $scope.place.geometry.location.lat(),
		       $scope.place.geometry.location.lng()
		     );	
		     console.log($scope.pos);
		     $scope.pos = $scope.place.geometry.location.lat() + "," + $scope.place.geometry.location.lng();
		     $scope.circle =  "[" + $scope.place.geometry.location.lat()
				+ "," + $scope.place.geometry.location.lng() + "]";
		     console.log($scope.pos);
		     //vm.map.setCenter(vm.place.geometry.location);
		   }
		   
		   $scope.dplaceChanged = function() {
			     $scope.dplace = this.getPlace();
			     console.log(
			       $scope.dplace.geometry.location.lat(),
			       $scope.dplace.geometry.location.lng(),$scope.dplace
			     );	
			     console.log($scope.dpos);
			     $scope.dpos = $scope.dplace.geometry.location.lat() + "," + $scope.dplace.geometry.location.lng();
			     console.log($scope.dpos);
			     
			     //vm.map.setCenter(vm.place.geometry.location);
			   }
	});
</script>
</html>